version: '3.5'
services:

  # This section is for starting elasticsearch
  elastic:
    # Calls the image:version of elasticsearch to use.
    ## Since no build variable exists, pulls from docker hub if image not present.
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.0
    # What to name the running container
    container_name: elastic
    # Used to connect container to the host network
    network_mode: host
    # If the container crashes, always restart it
    restart: always
    # ulimit is the number of open file descriptors per process.
    ulimits:
      # memlock option is used to set the maximum amount of locked-in-memory address space as given in kilobytes.
      memlock:
        # Soft limit is the limit enforced by kernel.
        soft: -1
        # Hard limit is the ceiling for the resource value for unprivileged processes
        ## which can raise its soft limit only to this value.
        hard: -1
    # Ports open host:container to interact with the container
    ports:
      # elasticsearch API port
      - 9200:9200
      # communication for nodes
      - 9300:9300
    environment:
      # Sets elastic to run as only a single node. Only change this if you "think" you know what you are doing.
      # https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html#single-node-discovery
      - discovery.type=single-node
    # Shares between the host system and the container for "ease of editing"/"persistence of data"
    volumes:
      # Mounts host:container volume to allow access/persistence to files running in the container.
      - ./elastic/moloch-data:/usr/share/elasticsearch/data:Z # Node data for elasticsearch persistence.

  # This section is for starting moloch
  moloch:
    # Moloch image to use.
    image: moloch:latest
    # If the image doesn't exist build from this location. "." is the local directory
    build: ./moloch
    # What to name the running container
    container_name: moloch
    # Used to connect container to the host for collecting off the wire
    network_mode: host
    # Ports open host:container to interact with the container
    ports:
      # Ports open host:container to interact with the container
      - 8005:8005
    # ulimit is the number of open file descriptors per process.
    ulimits:
      # memlock option is used to set the maximum amount of locked-in-memory address space as given in kilobytes.
      memlock:
        # Soft limit is the limit enforced by kernel.
        soft: -1
        # Hard limit is the ceiling for the resource value for unprivilged processess
        ## which can raise its soft limit only to this value.
        hard: -1
    # Waits to start moloch until elasticsearch is running
    depends_on:
      - elastic
    # Shares between the host system and the container for "ease of editing"/"persistence of data"
    volumes:
      # Mounts host:container volume to allow access/persistence to files running in the container
      - ./moloch/logs:/data/moloch/logs/:Z # log files related to moloch
      - ./moloch/pcap:/data/pcap/:ro # pcap folder for ingesting new pcap
      - ./moloch/raw:/data/moloch/raw/:rw # pcap folder for processed pcap - stored as sessions2 data
      - ./moloch/config/config.ini:/data/moloch/etc/config.ini:Z # Config used for moloch settings
      - ./init.txt:/init.txt:Z # Used to determine if elastic database should be initialized. If excluded will always start with clean moloch.
      - ./moloch/capture.txt:/capture.txt # Used to determine whether capture should start listening off the wire.
      - ./suricata/logs:/data/moloch/etc/suricata:z # Used to share alerts from suricata with moloch.
      ## 1 = leave alone, init if anything else.
    # Add container capabilities - These may not be needed, but if use cases expand they may be.
    ## They are used on our kit's config and have been carried over.
    cap_add:
      - IPC_LOCK # Allows to lock shared memory segments and mlock/mlockall calls.
      - NET_RAW # Allow use of RAW and PACKET sockets.
      - NET_ADMIN # Allows interacting with network interface. ie - promiscuous mode.
      - SYS_NICE # Allows the container to raise process nice values, set real-time scheduling policies, set CPU affinity, and other operations.


  # This section is for starting kibana
  kibana:
    # Calls the image:version of kibana to use. Make sure the version matches elasticsearch.
    ## Since no build variable exists, pulls from docker hub if image not present.
    image: docker.elastic.co/kibana/kibana:7.10.0
    # What to name the running container
    container_name: kibana
    # Used to connect container to the host network
    network_mode: host
    # Ports open host:container to interact with the container
    ports:
      # Ports open host:container to interact with the container
      - 5601:5601
    # Shares between the host system and the container for "ease of editing"/"persistence of data"
    volumes:
      # Mounts host:container volume to allow access/persistence to files running in the container
      - ./kibana/kibana.yml:/usr/share/kibana/config/kibana.yml:Z # Kibana config file. Mostly for adv users

  # This section is for starting suricata
  suricata:
    # Calls the image:version of suricata to use.
    image: suricata:6.0.0
     # If the image doesn't exist build from this location. "." is the local directory
    build: ./suricata
    # What to name the running container
    container_name: suricata
    # Used to connect container to the host for collecting off the wire
    network_mode: host
    # Add container capabilities - These may not be needed, but if use cases expand they may be.
    cap_add:
      - NET_ADMIN # Allows interacting with network interface. ie - promiscuous mode.
      - SYS_NICE # Allows the container to raise process nice values, set real-time scheduling policies, set CPU affinity, and other operations.
      # Shares between the host system and the container for "ease of editing"/"persistence of data"
    volumes:
      - ./suricata/rules:/etc/suricata/rules:z # Rules files.
      - ./suricata/etc/suricata.yaml/suricata.yaml:/etc/suricata/suricata.yaml:Z # Suricata.yaml to edit config
      - ./suricata/logs:/var/log/suricata:z # suricata logs for alerts and debug
